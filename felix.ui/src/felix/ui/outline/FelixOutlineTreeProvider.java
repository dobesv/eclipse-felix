/*
* generated by Xtext
*/
package felix.ui.outline;

import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.ui.editor.outline.IOutlineNode;
import org.eclipse.xtext.ui.editor.outline.impl.DefaultOutlineTreeProvider;
import org.eclipse.xtext.ui.editor.outline.impl.DocumentRootNode;

import felix.ast.Stmt;

/**
 * customization of the default outline structure
 * 
 */
public class FelixOutlineTreeProvider extends DefaultOutlineTreeProvider {
//	@Override
//	protected void _createChildren(DocumentRootNode parentNode, EObject rootElement) {
//		for (EObject content : rootElement.eContents()) {
//			createNode(parentNode, content);
//		}
//	}
	protected void _createChildren(IOutlineNode parentNode, felix.ast.FunOrProcDecl x) {
		for(Stmt s:x.getStmts()) {
			_createNode(parentNode, s);
		}
	}
	protected void _createChildren(IOutlineNode parentNode, felix.ast.Fun x) {
		_createChildren(parentNode, x.getStmts());
	}
	protected boolean _isLeaf(felix.ast.Open x) { return true; }
	protected boolean _isLeaf(felix.ast.Use x) { return true; }
	protected boolean _isLeaf(felix.ast.Include x) { return true; }
	protected boolean _isLeaf(felix.ast.Requires x) { return true; }
	protected boolean _isLeaf(felix.ast.CEnum x) { return false; }
	protected boolean _isLeaf(felix.ast.SimpleStmt x) { return true; }
	protected boolean _isLeaf(felix.ast.RecordMemDecl x) { return true;	}
	
	protected void _createNode(IOutlineNode parentNode, felix.ast.DeclName x) {}
	protected void _createNode(IOutlineNode parentNode, felix.ast.ExprStmt x) {}
	protected void _createNode(IOutlineNode parentNode, felix.ast.NoOp x) {}
	protected void _createNode(IOutlineNode parentNode, felix.ast.Requires x) {}

}
